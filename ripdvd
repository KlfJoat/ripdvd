#!/bin/bash
#
# ripdvd - Back up (stubborn) DVD's to ISO using dvdbackup
#
# For stubborn discs, try manually with: 
# time dvdbackup -M -i /dev/sr0 -o /home/klfjoat/tmp -v -p --error=b | tee /home/klfjoat/tmp/dvdbackup-stubborn.log
# time mkisofs -dvd-video -udf -quiet -output /home/klfjoat/tmp/stubborn.iso /home/klfjoat/tmp/$title
#

#####################
### USER VARIABLE ###
#####################
# Note: This is the directory that the DVD will be backed up to
# as well as where the .iso file will be left.  Ensure it has 18GB!
# It's best you don't choose a high-latency drive like a NAS or USB2 HDD.

backup_dir=/home/klfjoat/tmp

############################################
# # # # # # # # # # #  # # # # # # # # # # # 
########## DO NOT EDIT BELOW HERE ##########
# # # # # # # # # # #  # # # # # # # # # # # 
############################################

#########################
##### GENERAL SETUP #####
#########################

# Debugging (print commands before executing)
#set -x

### Set DVD device
# Set device as passed parameter or a sensible default
# TODO: Validate that $dvd_device is an optical drive (how?)(why: it doesn't make sense to do this to anything else) and that it has something in it (how?).  
dvd_device=${1:-/dev/sr0}
shift

### Functions
# Function to change the title of an [xterm|gnome-terminal] window
function setTitle () {
  echo -n "]0;$1"
}

### Other stuff
startTime=`date --iso-8601=minutes`

# ? Why umask?
umask 022

termTitle="RIP $dvd_device"

# ? Should I save a log file in /tmp? Use unique name only (don't have DVD name yet; timestamp should be sufficient). Later on, move it to $backup_dir and rename to $title? 

# Figure out the disc size for the progress in the title bar
size=`df --human-readable $dvd_device | grep $dvd_device | awk '{print $2}'`
# Set the title bar with 
termTitle="$termTitle : $size"
setTitle "$termTitle"

echo

# I had to edit this to remove quotes from title that my version of dvdbackup adds.
title=`dvdbackup --info --input=$dvd_device 2>/dev/null | grep 'DVD-Video information of the DVD with title' | sed -e 's/.* title \"//' | sed -e 's/\"$//'`
setTitle "$termTitle : $title"

########################
##### RENAME TITLE #####
########################

# Check for empty title or existing directory
# If empty title, create one for our use
if [ "$title" = "" ] ; then
  title="DVD_VIDEO"
fi

### If existing directory, find an unused name for us to rip to, and set $title to that
i="0"
findTitle="$title"
while [ -d $backup_dir/"$findTitle" ] ; do
  i=$[$i+1]
  findTitle="$title-$i"
done
title="$findTitle"

# Tell the user the title
setTitle "$termTitle : $title"

######################
##### BACKUP DVD #####
######################

status=0
echo "STARTING RIP OF '$title'"

### Background progress indicator
while [ true ] ; do
  sleep 30
  setTitle "$termTitle : `du --summarize --human-readable $backup_dir/"$title" | awk '{print $1}'` : $title"
done &

### Make backup
# TODO Maybe tee a log for each file?
time dvdbackup --mirror --progress --input=$dvd_device --output=$backup_dir --name="$title"

### If error during dvdbackup...
if [ $? -ne 0 ] ; then
  # Complain and exit
  # TODO Maybe retry with the error-reducing  option --error=b ?  
  # TODO Find out if dvdbackup throws an error code on an error-filled disc.
  echo "ERROR RUNNING dvdbackup"
  exit $? 
fi
    
# No clue why all users need read access on the dir and execute on the files.
#chmod -R a+r $backup_dir/"$title"
#find $backup_dir/"$title" -type d -exec chmod a+x {} \;
echo "DONE RIPPING '$title'"

### Stop the background process indicator
# ? Is there any way to do this without it showing up in the window?
kill %%

### Eject disc because we're done 
eject $dvd_device

####################
##### MAKE ISO #####
####################

### Check for existing ISO and change $title if necessary
i="0"
isoTitle="$title.iso"
while [ -f $backup_dir/"$isoTitle" ] ; do
  i=$[$i+1]
  isoTitle="$title-$i.iso"
done
#  title="$title-$i"

# Tell user we're making the ISO
setTitle "MAKE ISO $termtitle : $isoTitle"
echo "MAKE ISO $isoTitle"

### Make ISO
# TODO - Create background process indicator?
#   No -quiet and -gui both same - puts % on new lines.  Usable?
time mkisofs -A "$title" -dvd-video -udf -quiet -output $backup_dir/"$isoTitle" $backup_dir/"$title"

# If error during mkisofs...
if [ $? -ne 0 ] ; then
  # Complain and exit
  echo "ERROR RUNNING mkisofs/genisoimage on $backup_dir/$title to make $isoTitle"
  exit $? 
fi

### Delete the working directory now that the ISO is done successfully
rm -rf $backup_dir/"$title"

######################
##### RENAME ISO #####
######################

# Set window title for the rename
setTitle "RENAME $isoTitle"

# Ask for new title to rename .iso file
echo "Rip started $startTime and the disc was $size"
echo "$isoTitle"
echo "Enter a new name, or just ENTER to quit"
read renameTitle

# If new title entered
if [ "$renameTitle" != "" ] ; then
  # If an .iso already exists with that new title
  if [ -f $backup_dir/"$renameTitle".iso ] ; then  
    # Complain and do nothing
    echo "$backup_dir/$renameTitle.iso exists!  Not renaming."
    read nothingness
  else 
    # Otherwise, go ahead and rename (safely) and update $title var
    mv --no-clobber $backup_dir/"$isoTitle" $backup_dir/"$renameTitle".iso
    title="$renameTitle"
  fi
fi

################
##### DONE #####
################

# Tell the user that we're done
setTitle "DONE $termTitle : $isoTitle"
echo "DONE $termTitle : $isoTitle"

# Pause
#read nothingess

exit $status
